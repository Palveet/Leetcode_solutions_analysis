Time complexity of different operations on different datasets:


1. Unordered Set:
Insertion: Average case O(1), Worst case O(n) (due to rehashing)
Deletion: Average case O(1), Worst case O(n)
Search (Find): Average case O(1), Worst case O(n)
Traversal: O(n) (elements are not in any particular order)

2. Set:
Insertion: O(log n)
Deletion: O(log n)
Search (Find): O(log n)
Traversal: O(n) (elements are in sorted order)

3. Map:
Insertion: O(log n)
Deletion: O(log n)
Search (Find): O(log n)
Traversal: O(n) (elements are in sorted order)

4. Unordered Map:
Insertion: Average case O(1), Worst case O(n) (due to rehashing)
Deletion: Average case O(1), Worst case O(n)
Search (Find): Average case O(1), Worst case O(n)
Traversal: O(n) (elements are not in any particular order)

5. Max Heap
Insertion (push): O(log n)
Deletion (pop): O(log n)
Access (top): O(1)

6. Min Heap
Insertion (push): O(log n)
Deletion (pop): O(log n)
Access (top): O(1)

min heap : priority_queue<int,vector<int>,greater<int>>minh;

7. Deque
push_back(value), push_front(value): Amortized O(1)
pop_back(), pop_front(): Amortized O(1)
operator[]: O(1)
at(index): O(1)
front(), back(): O(1)
size(): O(1)
empty(): O(1)
clear(): O(n)

8. Queue 
push(value): O(1)
pop(): O(1)
front(): O(1)
back(): O(1)
size(): O(1)
empty(): O(1)